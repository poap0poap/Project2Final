ADDED THIS RIGHT ABOVE int main

//Opens Up Advisor.txt for the advisor information.
std::vector<Advisor> loadAdvisors(std::string filename) {
    std::vector<Advisor> list;
    std::ifstream in(filename);
    if (!in) {
        std::cerr << "Failed to open advisors.txt\n";
        return list;               // return empty list on failure
    }

    std::string line;
    // skip the first line:
    std::getline(in, line);

    // now read the rest into 'list':
    while (std::getline(in, line)) {
        if (line.empty()) continue;
        list.push_back({ line });
    }

    return list;                   // return the filled list
}

//Let's you choose your advisor and store it.
Advisor chooseAdvisor(std::vector<Advisor> all) {
    std::cout << "Choose your advisor:\n";
    for (size_t i = 0; i < all.size(); ++i)
        std::cout << "  " << (i+1) << ") " << all[i].name << "\n";

    int choice;
    while (true) {
        std::cout << "Enter the number of your advisor: ";
        std::cin >> choice;
        if (choice >= 1 && choice <= (int)all.size())
            return all[choice - 1];
        std::cout << "Invalid choice, please try again.\n";
    }
}





REPLACE THIS IN PlayerInfo.h

#ifndef PLAYER_INFO_H
#define PLAYER_INFO_H
#include <string>
#include "Board.h"

struct Advisor{
    std::string name = "None";
};

struct playerInfo {
    std::string firstName;
    std::string lastName;
    Advisor advisor;
    int age;
    int strength;
    int stamina;
    int wisdom;
    int points;
};

#endif



REPLACE THIS FOR YOUR PATH SELECTOR CODE 

 //path selector
    for (int i = 0; i<players; i++){
        if (!running){break;}
        path_selector = true;
        while(path_selector){
            if (!running){break;}
            cout << "Which path would player " << i+1 <<" like" <<endl;
            cout << "Press 1 for the Easier path" << endl;
            cout << "Press 2 for the Harder path" << endl;
            char keypress = _getch();

            if (keypress == 27) {  // ESC key
                running = false;
                break; // Exit inner while loop
            }

            switch (keypress){
                case '1':
                    path[i] = 0;
                    path_selector = false;
                    playerData[i].advisor = chooseAdvisor(allAdvisors);
                    break;
                case '2':
                    path[i] = 1;
                    path_selector = false;
                    break;
                default:
                    break;
            }
            clearScreen();
        }
    }

    



    CHANGE THIS FOR CASE 3 WHEN YOU ARE DOING THE MENU

    case '3': {
                            std::string full = playerData[b].advisor.name;      
                            auto pos = full.find('|');
                            std::string nameOnly = (pos == std::string::npos)
                                                   ? full
                                                   : full.substr(0, pos);
                            if (!nameOnly.empty() && nameOnly.back()==' ')
                              nameOnly.pop_back();
                            
                            cout << "Player " << b+1 << "'s advisor is " << nameOnly << "." << endl;
                                break;
                            }